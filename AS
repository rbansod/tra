import java.io.*;
import java.net.*;

public class AudioServer {
    public static void receiveTCP(int port) throws IOException {
        ServerSocket serverSocket = new ServerSocket(port);
        Socket clientSocket = serverSocket.accept();
        InputStream input = clientSocket.getInputStream();
        FileOutputStream fileOutput = new FileOutputStream("received_tcp.g711");

        long startTime = System.nanoTime();
        long totalBytes = 0;

        byte[] buffer = new byte[1024];
        int read;
        while ((read = input.read(buffer)) != -1) {
            totalBytes += read;
            fileOutput.write(buffer, 0, read);
        }
        long endTime = System.nanoTime();
        double duration = (endTime - startTime) / 1e9; // duration in seconds
        double throughput = (totalBytes * 8) / (1024 * 1024 * duration); // throughput in Mbps

        fileOutput.close();
        input.close();
        clientSocket.close();
        serverSocket.close();

        System.out.println("TCP Throughput: " + throughput + " Mbps");
    }

    public static void receiveUDP(int port) throws IOException {
        DatagramSocket socket = new DatagramSocket(port);
        FileOutputStream fileOutput = new FileOutputStream("received_udp.g711");

        byte[] buffer = new byte[1024];
        DatagramPacket packet = new DatagramPacket(buffer, buffer.length);

        long startTime = System.nanoTime();
        long totalBytes = 0;
        boolean running = true;
        while (running) {
            socket.receive(packet);
            totalBytes += packet.getLength();
            if (new String(packet.getData(), 0, packet.getLength()).equals("end")) {
                running = false;
                continue;
            }
            fileOutput.write(packet.getData(), 0, packet.getLength());
        }
        long endTime = System.nanoTime();
        double duration = (endTime - startTime) / 1e9; // duration in seconds
        double throughput = (totalBytes * 8) / (1024 * 1024 * duration); // throughput in Mbps

        fileOutput.close();
        socket.close();

        System.out.println("UDP Throughput: " + throughput + " Mbps");
    }

    public static void main(String[] args) throws IOException {
        int port = 12345; // Example port
        new Thread(() -> {
            try {
                receiveTCP(port);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }).start();
        new Thread(() -> {
            try {
                receiveUDP(port + 1);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }).start();
    }
}
