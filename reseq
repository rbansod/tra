.orderComparator(new CustomSequenceNumberComparator())

public class CustomSequenceNumberComparator implements Comparator<Message<?>> {
    @Override
    public int compare(Message<?> m1, Message<?> m2) {
        // Assuming the target object is the payload and it has a method to get sequence number
        TargetObject payload1 = (TargetObject) m1.getPayload();
        TargetObject payload2 = (TargetObject) m2.getPayload();
        return Integer.compare(payload1.getSequenceNumber(), payload2.getSequenceNumber());
    }
}

public class CustomMessageGroupProcessor implements MessageGroupProcessor {
    @Override
    public Object processMessageGroup(MessageGroup group) {
        List<Message<?>> sortedMessages = group.getMessages()
            .stream()
            .sorted((m1, m2) -> {
                TargetObject payload1 = (TargetObject) m1.getPayload();
                TargetObject payload2 = (TargetObject) m2.getPayload();
                return Integer.compare(payload1.getSequenceNumber(), payload2.getSequenceNumber());
            })
            .collect(Collectors.toList());
        return sortedMessages;
    }
}

public class CustomReleaseStrategy implements ReleaseStrategy {
    @Override
    public boolean canRelease(MessageGroup group) {
        // Custom logic to determine when the group can be released
        // For example, release if the group size is equal to the expected sequence size
        return group.size() >= 5;
    }
}



File directory = new File("path/to/your/folder");
File directory = new File("path/to/your/folder");

        if (directory.exists()) {
            deleteDirectory(directory);
            System.out.println("Directory deleted successfully");
        } else {
            System.out.println("Directory does not exist");
        }

private static void deleteDirectory(File directory) {
        File[] allContents = directory.listFiles();
        if (allContents != null) {
            for (File file : allContents) {
                deleteDirectory(file);
            }
        }
        directory.delete();
    }
